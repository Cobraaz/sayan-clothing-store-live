{"ast":null,"code":"import { takeEvery, put, call } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/sayan/Documents/My Projects/sayan-clothing-store-live/src/redux/shop/shop.sagas.js"],"names":["takeEvery","put","call","ShopActionTypes","fetchCollectionSuccess","fetchCollectionsFailure","fetchCollectionAsync","collectionRef","firestore","collection","snapshot","get","collectionsMap","convertCollectionsSnapshotToMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,sBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMV,IAAI,CAC/BW,+BAD+B,EAE/BH,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACG,sBAAsB,CAACQ,cAAD,CAAvB,CAAT;AACD,GARD,CAQE,OAAOE,KAAP,EAAc;AACd,UAAMb,GAAG,CAACI,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CACbG,eAAe,CAACc,uBADH,EAEbX,oBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, put, call } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\n\nimport {\n  fetchCollectionSuccess,\n  fetchCollectionsFailure\n} from \"./shop.actions\";\n\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}